/**
 * This class is generated by jOOQ
 */
package jooq.database;


import javax.annotation.Generated;

import jooq.database.tables.Block;
import jooq.database.tables.Blockheader;
import jooq.database.tables.Txn;
import jooq.database.tables.records.BlockRecord;
import jooq.database.tables.records.BlockheaderRecord;
import jooq.database.tables.records.TxnRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>public</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<BlockRecord, Integer> IDENTITY_BLOCK = Identities0.IDENTITY_BLOCK;
	public static final Identity<BlockheaderRecord, Integer> IDENTITY_BLOCKHEADER = Identities0.IDENTITY_BLOCKHEADER;
	public static final Identity<TxnRecord, Integer> IDENTITY_TXN = Identities0.IDENTITY_TXN;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<BlockRecord> BLOCK_PKEY = UniqueKeys0.BLOCK_PKEY;
	public static final UniqueKey<BlockRecord> BLOCK_HASHMERKLEROOT_KEY = UniqueKeys0.BLOCK_HASHMERKLEROOT_KEY;
	public static final UniqueKey<BlockheaderRecord> BLOCKHEADER_PKEY = UniqueKeys0.BLOCKHEADER_PKEY;
	public static final UniqueKey<TxnRecord> TXN_PKEY = UniqueKeys0.TXN_PKEY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<BlockheaderRecord, BlockRecord> BLOCKHEADER__BLOCKHEADER_ID_FKEY = ForeignKeys0.BLOCKHEADER__BLOCKHEADER_ID_FKEY;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<BlockRecord, Integer> IDENTITY_BLOCK = createIdentity(Block.BLOCK, Block.BLOCK.BLOCK_ID);
		public static Identity<BlockheaderRecord, Integer> IDENTITY_BLOCKHEADER = createIdentity(Blockheader.BLOCKHEADER, Blockheader.BLOCKHEADER.ID);
		public static Identity<TxnRecord, Integer> IDENTITY_TXN = createIdentity(Txn.TXN, Txn.TXN.ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<BlockRecord> BLOCK_PKEY = createUniqueKey(Block.BLOCK, Block.BLOCK.BLOCK_ID);
		public static final UniqueKey<BlockRecord> BLOCK_HASHMERKLEROOT_KEY = createUniqueKey(Block.BLOCK, Block.BLOCK.HASHMERKLEROOT);
		public static final UniqueKey<BlockheaderRecord> BLOCKHEADER_PKEY = createUniqueKey(Blockheader.BLOCKHEADER, Blockheader.BLOCKHEADER.ID);
		public static final UniqueKey<TxnRecord> TXN_PKEY = createUniqueKey(Txn.TXN, Txn.TXN.ID);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<BlockheaderRecord, BlockRecord> BLOCKHEADER__BLOCKHEADER_ID_FKEY = createForeignKey(jooq.database.Keys.BLOCK_PKEY, Blockheader.BLOCKHEADER, Blockheader.BLOCKHEADER.ID);
	}
}
