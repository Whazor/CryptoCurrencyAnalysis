/**
 * This class is generated by jOOQ
 */
package jooq.database.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.database.Keys;
import jooq.database.Public;
import jooq.database.tables.records.BlockRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Block extends TableImpl<BlockRecord> {

	private static final long serialVersionUID = 907907955;

	/**
	 * The reference instance of <code>public.Block</code>
	 */
	public static final Block BLOCK = new Block();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<BlockRecord> getRecordType() {
		return BlockRecord.class;
	}

	/**
	 * The column <code>public.Block.block_id</code>.
	 */
	public final TableField<BlockRecord, Integer> BLOCK_ID = createField("block_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.Block.hashMerkleRoot</code>.
	 */
	public final TableField<BlockRecord, String> HASHMERKLEROOT = createField("hashMerkleRoot", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>public.Block.txn_counter</code>.
	 */
	public final TableField<BlockRecord, Integer> TXN_COUNTER = createField("txn_counter", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>public.Block</code> table reference
	 */
	public Block() {
		this("Block", null);
	}

	/**
	 * Create an aliased <code>public.Block</code> table reference
	 */
	public Block(String alias) {
		this(alias, BLOCK);
	}

	private Block(String alias, Table<BlockRecord> aliased) {
		this(alias, aliased, null);
	}

	private Block(String alias, Table<BlockRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<BlockRecord, Integer> getIdentity() {
		return Keys.IDENTITY_BLOCK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<BlockRecord> getPrimaryKey() {
		return Keys.BLOCK_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<BlockRecord>> getKeys() {
		return Arrays.<UniqueKey<BlockRecord>>asList(Keys.BLOCK_PKEY, Keys.BLOCK_HASHMERKLEROOT_KEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Block as(String alias) {
		return new Block(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Block rename(String name) {
		return new Block(name, null);
	}
}
