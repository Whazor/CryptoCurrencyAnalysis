/**
 * This class is generated by jOOQ
 */
package jooq.database.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.database.Keys;
import jooq.database.Public;
import jooq.database.tables.records.TxnRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Txn extends TableImpl<TxnRecord> {

	private static final long serialVersionUID = -996893543;

	/**
	 * The reference instance of <code>public.Txn</code>
	 */
	public static final Txn TXN = new Txn();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TxnRecord> getRecordType() {
		return TxnRecord.class;
	}

	/**
	 * The column <code>public.Txn.txn_id</code>.
	 */
	public final TableField<TxnRecord, Integer> TXN_ID = createField("txn_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.Txn.nVersion</code>.
	 */
	public final TableField<TxnRecord, Short> NVERSION = createField("nVersion", org.jooq.impl.SQLDataType.SMALLINT, this, "");

	/**
	 * The column <code>public.Txn.inCounter</code>.
	 */
	public final TableField<TxnRecord, Short> INCOUNTER = createField("inCounter", org.jooq.impl.SQLDataType.SMALLINT, this, "");

	/**
	 * The column <code>public.Txn.outCounter</code>.
	 */
	public final TableField<TxnRecord, Short> OUTCOUNTER = createField("outCounter", org.jooq.impl.SQLDataType.SMALLINT, this, "");

	/**
	 * The column <code>public.Txn.lock_time</code>.
	 */
	public final TableField<TxnRecord, Timestamp> LOCK_TIME = createField("lock_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>public.Txn.block_id</code>.
	 */
	public final TableField<TxnRecord, Integer> BLOCK_ID = createField("block_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>public.Txn</code> table reference
	 */
	public Txn() {
		this("Txn", null);
	}

	/**
	 * Create an aliased <code>public.Txn</code> table reference
	 */
	public Txn(String alias) {
		this(alias, TXN);
	}

	private Txn(String alias, Table<TxnRecord> aliased) {
		this(alias, aliased, null);
	}

	private Txn(String alias, Table<TxnRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TxnRecord, Integer> getIdentity() {
		return Keys.IDENTITY_TXN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TxnRecord> getPrimaryKey() {
		return Keys.TXN_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TxnRecord>> getKeys() {
		return Arrays.<UniqueKey<TxnRecord>>asList(Keys.TXN_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<TxnRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<TxnRecord, ?>>asList(Keys.TXN__TXN_BLOCK_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Txn as(String alias) {
		return new Txn(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Txn rename(String name) {
		return new Txn(name, null);
	}
}
